{"version":3,"sources":["components/sidebar/index.js","components/button/index.js","components/footer/index.js","components/header/index.js","services/api/index.js","services/files/index.js","App.js","serviceWorker.js","index.js"],"names":["SidebarItem","name","children","onSelect","isDirectory","rest","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","List","disablePadding","dense","map","subItem","key","ListItem","button","onClick","ListItemText","Sidebar","items","depthStep","depth","className","sidebarItem","index","Button","label","type","variant","color","Footer","onConfirm","onCancel","width","style","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","Header","handleChange","value","classes","AppBar","position","Tabs","onChange","scrollButtons","indicatorColor","textColor","aria-label","item","i","Tab","instance","axios","create","baseURL","timeout","headers","getFiles","api","get","saveFile","file","put","Alert","props","elevation","App","useState","files","setFiles","code","setCode","content","openedFiles","setOpenedFiles","screenWidth","setScreenWidth","tab","setTab","successOpen","setSuccessOpen","errorOpen","setErrorOpen","message","setMessage","useEffect","window","innerWidth","addEventListener","then","res","data","catch","err","changeFile","list","fileList","onDelete","a","delete","result","onSave","handleErrorClose","event","reason","handleSuccessClose","opened","find","findIndex","getFile","length","mode","editorProps","$blockScrolling","height","Snackbar","open","autoHideDuration","onClose","severity","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.049d7ab7.chunk.js","sourcesContent":["import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport './style.css'\r\n\r\nfunction SidebarItem({ name, children, onSelect, isDirectory, ...rest }) {\r\n  return (\r\n    <>\r\n    {\r\n      isDirectory ?\r\n        <Accordion>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n          <Typography>\r\n            {name}\r\n          </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List disablePadding dense>\r\n              {children.map((subItem) => (\r\n                <SidebarItem\r\n                  key={subItem.name}\r\n                  onSelect={onSelect}\r\n                  {...subItem}\r\n                />\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      : <ListItem button dense onClick={() => onSelect(rest.id)} {...rest}>\r\n          <ListItemText>\r\n            <span>{name}</span>\r\n          </ListItemText>\r\n        </ListItem>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Sidebar({ items, depthStep, depth, onSelect }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <List disablePadding dense>\r\n        {items.map((sidebarItem, index) => (\r\n          <SidebarItem\r\n            key={`${sidebarItem.name}${index}`}\r\n            depthStep={depthStep}\r\n            depth={depth}\r\n            onSelect={onSelect}\r\n            {...sidebarItem}\r\n          />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Btn from '@material-ui/core/Button';\r\n\r\nimport './style.css'\r\n\r\nfunction Button({ onClick, label, type }) {\r\n  return (\r\n    <Btn className=\"button\" variant=\"contained\" color={type} onClick={onClick}>\r\n      {label}\r\n    </Btn>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from '../button'\r\n\r\nimport './style.css'\r\n\r\nfunction Footer({ onConfirm, onCancel, width }) {\r\n  return (\r\n    <div className=\"footer\" style={{ width: width - 300 }}>\r\n      <Button label=\"Delete\" type=\"secondary\" onClick={onCancel} />\r\n      <Button label=\"Save\" type=\"primary\" onClick={onConfirm} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Header({ handleChange, value, items }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable tabs\"\r\n        >\r\n          {\r\n            items && items.map(\r\n              (item, i) =>\r\n                <Tab key={item.name} label={item.name} {...a11yProps(i)} />\r\n            )\r\n          }\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://my-json-server.typicode.com/open-veezoo/editor',\r\n  timeout: 5000,\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\nexport default instance\r\n","import api from '../api'\r\n\r\nexport function getFiles() {\r\n  return api.get('/filetree')\r\n}\r\n\r\nexport function getFile(id) {\r\n  return api.get(`/files/${id}`)\r\n}\r\n\r\nexport function deleteFile(id) {\r\n  return api.delete(`/files/${id}`)\r\n}\r\n\r\nexport function saveFile(file) {\r\n  return api.put(`/files/${file.id}`, file)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport AceEditor from \"react-ace\";\nimport Sidebar from './components/sidebar'\nimport Footer from './components/footer'\nimport Header from './components/header'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport \"ace-builds/src-noconflict/mode-java\";\nimport './app.css'\n\nimport { getFiles, getFile, deleteFile, saveFile } from './services/files'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App() {\n\n  const [files, setFiles] = useState([])\n  const [code, setCode] = useState('')\n  const [openedFiles, setOpenedFiles] = useState([{ name: 'NewFile.java', id: -1, content: '' }])\n  const [screenWidth, setScreenWidth] = useState()\n  const [tab, setTab] = useState(0)\n  const [successOpen, setSuccessOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    setScreenWidth(window.innerWidth)\n    window.addEventListener('resize', () => {\n      setScreenWidth(window.innerWidth)\n    });\n    getFiles().then(res => {\n      setFiles(res.data)\n    }).catch(err => {\n      setMessage('Error loading files')\n      setErrorOpen(true)\n    })\n  }, [])\n\n  const changeFile = (file, index, list) => {\n    const fileList = list || openedFiles\n    fileList[tab].content = code\n    setOpenedFiles(fileList)\n    setTab(index)\n    setCode(file.content)\n  }\n\n  const openFile = (id) => {\n    const opened = openedFiles.find(item => item.id === id)\n    if (!opened) {\n      getFile(id).then(res => {\n        const fileList = [\n          ...(openedFiles.length > 1 || openedFiles[0].id !== -1 ? openedFiles : []),\n          { name: res.data.name, id, content: res.data.content }\n        ]\n        changeFile(res.data, fileList.length - 1, fileList)\n      }).catch(err => {\n        setMessage('Error opening your file')\n        setErrorOpen(true)\n      })\n    } else {\n      changeFile(opened, openedFiles.findIndex(item => item.id === id))\n    }\n  }\n\n  const onDelete = async () => {\n    try {\n      await deleteFile(openedFiles[tab].id)\n      const result = await getFiles()\n      setFiles(result.data)\n      setMessage('File deleted successfully')\n      setSuccessOpen(true)\n    } catch (e) {\n      setMessage('Error deleting your file')\n      setErrorOpen(true)\n    }\n  }\n\n  const onSave = async () => {\n    try {\n      const file = openedFiles[tab]\n      file.content = code\n      await saveFile(file)\n      setMessage('File saved successfully')\n      setSuccessOpen(true)\n    } catch (e) {\n      setMessage('Error saving your file')\n      setErrorOpen(true)\n    }\n  }\n\n  const handleErrorClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setErrorOpen(false);\n  };\n\n  const handleSuccessClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSuccessOpen(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <Sidebar items={files} onSelect={openFile} />\n      <div className=\"editor-container\">\n        <Header value={tab} handleChange={(event, index) => changeFile(openedFiles[index], index)} items={openedFiles} />\n        <AceEditor\n          mode=\"java\"\n          onChange={setCode}\n          value={code}\n          name=\"editor-div\"\n          editorProps={{ $blockScrolling: true, height: '100%' }}\n        />\n        <Footer width={screenWidth || 0} onCancel={onDelete} onConfirm={onSave} />\n      </div>\n      <Snackbar open={successOpen} autoHideDuration={6000} onClose={handleSuccessClose}>\n        <Alert onClose={handleSuccessClose} severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <Snackbar open={errorOpen} autoHideDuration={6000} onClose={handleErrorClose}>\n        <Alert onClose={handleErrorClose} severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}